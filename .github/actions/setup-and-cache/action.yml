name: Setup and cache
description: Setup for node, pnpm and cache for browser testing binaries
inputs:
  node-version:
    required: false
    description: Node version for setup-node
    default: 20.x
  install-deps:
    required: false
    default: true

runs:
  using: composite

  steps:
    - name: Set node version to ${{ inputs.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}

    - name: Install pnpm
      uses: pnpm/action-setup@v2
      with:
        run_install: false

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - uses: actions/cache@v3
      name: Setup pnpm cache
      if: ${{ ! startsWith(github.ref_name, 'renovate') }}
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Resolve package versions
      id: resolve-package-versions
      shell: bash
      run: >
        echo "$(
          node -e "
            const fs = require('fs');
            const lockfile = fs.readFileSync('./pnpm-lock.yaml', 'utf8');
            const pattern = (name) => new RegExp(name + ':\\\s+specifier: [\\\s\\\w\\\.^]+version: (\\\d+\\\.\\\d+\\\.\\\d+)');
            const cypressVersion = lockfile.match(pattern('cypress'))[1];
            const playwrightVersion = lockfile.match(pattern('playwright'))[1];
            console.log('CYPRESS_VERSION=' + cypressVersion);
            console.log('PLAYWRIGHT_VERSION=' + playwrightVersion);
          "
        )" >> $GITHUB_ENV

    - name: Print versions
      shell: bash
      run: echo "CYPRESS_VERSION=${{ env.CYPRESS_VERSION }} PLAYWRIGHT_VERSION=${{ env.PLAYWRIGHT_VERSION }}"

    - name: Check resolved package versions
      shell: bash
      if: |
        contains(fromJSON('[null, "", "undefined"]'), env.CYPRESS_VERSION) ||
        contains(fromJSON('[null, "", "undefined"]'), env.PLAYWRIGHT_VERSION)
      run: echo "Failed to resolve package versions. See log above." && exit 1

    - name: Cache Cypress v${{ env.CYPRESS_VERSION }}
      uses: actions/cache@v3
      id: cypress-cache
      with:
        path: ${{ env.CYPRESS_CACHE_FOLDER }}
        key: ${{ runner.os }}-cypress-${{ env.CYPRESS_VERSION }}
        restore-keys: |
          ${{ runner.os }}-cypress-

    - name: Cache Playwright v${{ env.PLAYWRIGHT_VERSION }}
      uses: actions/cache@v3
      id: playwright-cache
      with:
        path: ${{ env.PLAYWRIGHT_BROWSERS_PATH }}
        key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
        restore-keys: |
          ${{ runner.os }}-playwright-

    - name: Install
      if: ${{ steps.playwright-cache.outputs.cache-hit != 'true' || inputs.install-deps != 'false' }}
      shell: bash
      run: pnpm i --frozen-lockfile

    - name: Install Playwright Dependencies
      shell: bash
      if: ${{ steps.playwright-cache.outputs.cache-hit != 'true' }}
      run: pnpx playwright install --with-deps
